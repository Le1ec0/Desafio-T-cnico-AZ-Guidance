@page "/"
@using DesafioTecnicoAZGuidance.Services
@using DesafioTecnicoAZGuidance.Models
@inject PermissaoClienteService permissaoClienteService

<h3>Editar Permissões do Cliente</h3>

<div>
    <label for="clienteId">Cliente ID:</label>
    <InputText id="clienteId" @bind-Value="clienteId" />
    <button @onclick="CarregarCliente">Carregar Cliente</button>
</div>

@if (cliente != null)
{
        <EditForm Model="@cliente" OnValidSubmit="SalvarAlteracoes">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div>
                <label for="nomeCliente">Nome do Cliente:</label>
                <p>@cliente.ClienteID</p> <!-- Exibir o ID do Cliente -->
            </div>

            <div>
                <label for="permitido">Permitido:</label>
                <InputCheckbox id="permitido" @bind-Value="cliente.Permitido" />
            </div>

            <div>
                <label for="tipoEmailId">Tipo de Email:</label>
                <p>@cliente.TipoEmailDescricao</p> <!-- Exibir descrição -->
            </div>

            <div>
                <label for="enviarParaId">Enviar Para:</label>
                <p>@cliente.EnviarParaDescricao</p> <!-- Exibir descrição -->
            </div>

            <div>
                <label for="formaEnvioRmId">Forma de Envio:</label>
                <p>@cliente.FormaEnvioDescricao</p> <!-- Exibir descrição -->
            </div>

            <button type="submit">Salvar Alterações</button>
        </EditForm>
}
else if (carregando)
{
        <p>Carregando dados do cliente...</p>
}
else if (erro != null)
{
        <p style="color:red">Erro: @erro</p>
}

@code {
    private string clienteId; // Altere para string para permitir entrada de texto
    private ClienteDto cliente; // Altere para ClienteDto
    private bool carregando = false;
    private string erro;

    private async Task CarregarCliente()
    {
        try
        {
            carregando = true;
            erro = null;

            // Tente converter o ID para um número inteiro
            if (int.TryParse(clienteId, out int id))
            {
                cliente = await permissaoClienteService.GetClienteById(id);
            }
            else
            {
                erro = "ID do cliente inválido. Insira um número.";
            }
        }
        catch (Exception ex)
        {
            erro = "Falha ao carregar dados do cliente. " + ex.Message;
        }
        finally
        {
            carregando = false;
        }
    }

    private async Task SalvarAlteracoes()
    {
        try
        {
            erro = null;
            var clienteAtualizado = new PermissaoCliente
                {
                    ClienteID = cliente.ClienteID,
                    Permitido = cliente.Permitido == "Sim", // Converter de string para bool
                    TipoEmailID = cliente.TipoEmailID,
                    EnviarParaID = cliente.EnviarParaID,
                    FormaEnvioRmID = cliente.FormaEnvioRmID
                };
            await permissaoClienteService.UpdateCliente(clienteAtualizado);
            // Aqui você pode mostrar uma mensagem de sucesso ou fazer outra ação após salvar
        }
        catch (Exception ex)
        {
            erro = "Falha ao salvar alterações. " + ex.Message;
        }
    }
}
